Systems Programming Experiences
--------------------------------------------------------------------------------
Group 2:
Daniel Meiller
Benjamin Maitland
Brennan Ringey
Nathan Castle

Daniel Meiller
--------------------------------------------------------------------------------
Over the course of this project, I had lots of problems arising from the
compiler. I had weird problems where including a function in a compilation would
cause either bootlooping or weird things to execute and display on the screen.
Even putting a panic or x86 hlt early wouldn't stop it from bootlooping. This
was very hard to debug, and I spent lots of time trying to figure these issues,
when I would've liked to work on the actually networking/programming aspect of
the project. I attempted to use the Windows Subsystem for Linux and gcc-6.2 as
well as an Ubuntu 17.04 vm, with both gcc-6.3 and gcc-5.4. If I had to do this
again I would install an LTS ubuntu version native onto my computer, as it would
make everything more simple. 

Because nobody in our group worked on a shell, we had to rely on recompiling
the OS and using different flags when we wanted to test the different modules.
This worked fine, but meant that our ability to demo things was relatively
limited.

Benjamin Maitland
--------------------------------------------------------------------------------
My role in the project was team leader. There wasn't too much to do as team 
lead; pretty much the only thing that fell upon me was the submission and 
setting up the git repo. Most important decisions were arrived at through group
consensus. 

Most of my issues were with not fully reading the documentation, missing things
fully explained there, and bashing my head against the wall trying to fix the 
problems that I created for myself. There's not too much to improve here beyond
reading it more throughly. 

My other big problem was time management. Balancing this class with my others 
and a new eboard role was very difficult, especially with the rear-loaded class
schedule. I feel like I got much less done than I wanted to, and that it was 
mainly my fault. A lot of the things that I wanted to do would have helped my
team out, like a real malloc, and getting user mode and mmap done sooner would 
have enabled them to make programs that interacted better with each other.

Another large challenge was when I dd'd my laptop hard drive instead of the
flash drive that I intended, which wiped my boot sector. This took away a bunch
of time as well as a lost me a bit of code that hadn't been pushed to the remote
repository. It was definitely a learning experience, and at least I got to demo
our code on laptop hardware. 

Brennan Ringey
--------------------------------------------------------------------------------


Nathan Castle
--------------------------------------------------------------------------------

